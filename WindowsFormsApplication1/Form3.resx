<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button8.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNAay06AAAAAMdEVYdERl
        c2NyaXB0aW9uABMJISMAAAAKdEVYdENvcHlyaWdodACsD8w6AAAABnRFWHRUaXRsZQCo7tInAAAAB3RF
        WHRBdXRob3IAqa7MSAAAAAh0RVh0Q29tbWVudAD2zJa/AAAAB3RFWHRTb3VyY2UA9f+D6wAAB3BJREFU
        WEeFV0lTVFcU7n/gwuzdWA5LrXIRURQn3CiDKUsmS0TAqSRuoi6sSrKIBhZRiFZZcYgaLdSNbixjFriP
        i1jRDSSgGHqimx7oAbqBk+879973XgsqVZ/3nuGe873zzrmvDRUKBQkizzVvUchb+PYlob5BfHjuE3G8
        XAUJcZPP5xUFBWUDynkEIYzN+KmvDaY2DUq9fRgHjWFhdS62iRGMl5eQM3jKgJwL6I2tcq+yJev5aoJg
        Up8Mifp65+ufC+XyOU/BgEY20AQ5gw+J5XOwA+ac9eU51UOnZ4xeYWUX2+Vz8bgPmYAG5iBXAwZ2SYMH
        FQG98cVqdd4DOLvurZ8HykZnADLTODA9bZCbngbcCtjg1E1DroCew5rNShbI5YL+5rzzMTbq/FyqV5j4
        3Id8o3MIBNO9sWVVnraJc1IsFmV+fl74t7CwIMWZotpdHPV1ZKzs5wGy0BPYmxwkA4V3OLBXULY6R4Zg
        M87MzMjs7KyuRAHkWO6gn7dHDMYO2lhRbw/QDjJUGvCp9VAFoKMd+0w6g2rMIfmsDI8My8DAgLS1tcnp
        r0/Lyz9fytzCvOSLBZuAZwy8WEzqoHHtahEKCovBg1nJZDJa0tLsjL6Wv1+/lt6+XqmqqpJly5bJihUr
        5OLFizI2Niql0ixeY17Pu35aFFNRqadvKJPNIBkTGqXKFpTTqp+WcqnE5pC3b9/KhYsXZMfOHVJdXS21
        tbWyZcsWOXXqlLx4MSTlcgmTUtAqZrJpwI+ZxUN5oB6rn+8zZOicSqfQnKjIgsg/IyNagc2bN8v27dul
        paVF9u3bJ3V1dXLnzh2JRiLa2O6VGjIAk1oSaQvuF5FJp9MwWmCfoYxAuodzEc3Kqoz+OwYiP2olWJGm
        pibZv3+/Erp69aqMj4/L3NyclpsxMikXK+XFYlxHjITUjzpFejEZRSqlRo4gx3d4eER6e3tl06bNWhU2
        7aFDh+TkyZMyODioFeVfuVyWWU6ZTpqZshlMXIlTh8Z2RIJkXE6fjEUKT0OQDMtYLM7g4srL4MMHsmfP
        Htm2bZs0NzdLe3u7tIPMwwcPdHKURGDMlwIJ8eLzCaTQAsinK6uX+ggZ7FnuiYmw/HL9utQ3NEhNTY2+
        muPHj0tXV5dW5vz583Lpp0vy7fffydmzZ+XMmTO6+jgH3TfSc6pHbty8iXj/maHQXEuQUWUAU1NJbcJo
        NCq/P3smX6FB161bp71x7NgxOXHihBw9elQOHz4su3fvlvXr18vatWtl1arVitWrfaxZvUZWrlwpy79Y
        rpV9/vy5xGIxxC8gz1RFXiJEZQVSSSnPldGwo3Lt2jVpbGzUpj1y5IgSISGC1SHBBlRt7969mCgD7h3q
        6uuUxMYvN6rMeGOjo1KeL+tDpzQnC2BgyCSTBtgnQIZf3Fg0JkNDQ9KNKtTuqpXOzk59RSTS3d2tZPja
        NClQX1+/CEoUBDdVbZLurm7cQy8kFo/rFzth83mADDJJSWJDUOnWLO6dSRx88uSJ9PT0yIEDB7RxWZ2u
        zi6tVF9fnzx89Eh+u3dPfr11S26iL25hDeLGzRty5ecr8vTpUxCJ6SS5PEklwnwAyTgiSsIikUhoCflB
        LOGOYYU4xiREEh0dHXLw4EG5f+++N9a8AnjPLInynNr5aWEexg/mdQglEthY0MnICSXFu2AWZN69eye3
        b9+W1tZWvXHbO9qlrbVNWlta9WPJZufPiBI+Bd4PbzRpoVDEpQnwi46xnkqiDZLIASgBzWcB3UfJOPbs
        cgYPR8JyF1c++6WhsUHJ7Ny5C5dgtZzDGP/16pXthYTEJ+NATOLxSbxqQOVJje2TYQ7YkIfgHmQoUEln
        30H1CBBH3/BVlEtlmQhPyN27d3WK+CloamrW+2fDhg1y+VI/PqLj+tOBPcA4Jp6NpYBuEjLA2CavsSUg
        h5yT58g9HS3ikPlU2Yz5cvOe4EeRvUNCjY37QGgrGvsk7pE/9FcgLzAXsyKu21syJODI0BYyZTRgeTlB
        TE5wzxKTAEcyjduZzTg2Nib3MEEkxN80NVtrZKB/QEaGh/Uzwn4zMRHLxnA5NKbCyRbwAZmYdTYH41Gu
        ATLUwcaxjEYjOvJ8+vfv38vjx4/lwoUfpP9yv7x5/Uabl71gHoIJ2DcAVs3BuIznxQ2QiYGMOnuAA5Tu
        wFJgldgD7COOPT+SZVSL08KHiC06/0H8Cn1AJhl9BdgoVMlXYuH00ClJgGPMwyTEnxj8Pcz/GfBeiuLW
        VjLq7+9NDgcT08tj9ST3GTIAXhs/DcGgTEpSEfyyC2PCwpEJ+ES9OPR1/sFzQXh5AnIoin+isagBAqqs
        yeDEBArjE1Mfa7OyCRZcAe+c8afNxXU+lE1c3wYylsQS0GD2oE84ENT5OH/qltC7M0EfT8+9lUPRCMqN
        KSHc4UgAnCCCr4Q/uLkaOB9r0xUy4OKov9urr7FX+hjQFqIhbBOo0hocovgMRICJsPGpIKOwMsiEPzjv
        yLiH1b31MWRMTo8MiYSRiIi41SVQGDKL9YA9w73GCdoC+JTNR0T+B5PTA7tV1qblAAAAAElFTkSuQmCC
</value>
  </data>
</root>